package main

import "fmt"

func main() {
	//■ポインタ渡しと参照渡し
	
	/*
	/ある変数を関数に渡すと、実際は変数の値のコピーが渡されるので、呼び出された関数内で
	/値を変更しても、呼び出し元の変数の値は一切変わらない。
	/
	/一方で値のポインタを関数に渡した時は、値の実態は関数の呼び出しもとも、呼び出し先も
	/同じ変数のため、呼び出した関数内で呼び出し元の値を変更することができる。
	/
	/ポインタを使って値を渡すことを「ポインタ渡し」、「参照渡し」という
	/ 
	/C言語ではポインタの値を演算することで別のアドレスを得ることができるが、
	/意図しない不正なメモリへアクセスしてしまう危険性があるため、
	/Golangではポインタの演算はできないように設計されている。
	/
	*/


	a, b := 1, 1
	
	double(a, &b)
	fmt.Println("値渡し : ", a)
	fmt.Println("参照渡し : ", b)
}

func double(x int, y *int) {

	fmt.Println(x, y)
	//変数の値を変更
	x = x * 2
	
	//関節演算子を使用し、ポインタyが指し示す変数の値を変更
	fmt.Println(*y)
	*y = *y * 2
	fmt.Println(*y)
}
